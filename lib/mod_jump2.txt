next_label n current_label m
# changed from mod_jump:
#   @begin takes number of labels instead of first label
#   @end has no argument
#   when jumping happens  @goto and @goto_if disables following code until @at or @end

:init
    loadas .cs consts
    .cs:def 0  LABELS JUMPS STUB X

# N: number of labels
:@begin N
    is_val N

    .cs:redef N LABELS
    .cs:add 1 LABELS

    .cs:redef 0 JUMPS STUB

    dup_bf_at next_label  .cs:LABELS  +
    bf_at next_label  [[>+>+<<-]->[<+>-]>>+<
    dup_bf_at next_label  .cs:LABELS  -[
    bf_at next_label  [[-]>-<]
    bf_at next_label  ]>[ <<<

# N: starts with 0  currently 255 and 254 cause error
:@at N
    is_val N

    bf_at next_label  >>> [-]
    dup_bf_at next_label  .cs:JUMPS  ]
    bf_at next_label  ]<]>[

    .cs:redef N X
    .cs:sub .cs:STUB X

    dup_bf_at next_label  .cs:X  [-]]<]>[
    bf_at next_label  <<<

    .cs:redef N STUB
    .cs:inc STUB

    .cs:redef 0 JUMPS

:@end
    bf_at next_label  >>> [-]
    dup_bf_at next_label  .cs:JUMPS  ]
    bf_at next_label  ]<

    .cs:redef .cs:LABELS X
    .cs:sub .cs:STUB X
    .cs:dec X

    dup_bf .cs:LABELS L
    dup_bf .cs:STUB S
    dup_bf .cs:X X

    dup_bf_at next_label  .cs:X  ]>[[-]]<

    bf_at next_label  <<]


# _set: any of set copy move or user_defined macro
# lbl: will be passed to _set as first argument  type depends on _set
:@goto _set lbl
    set .cs:LABELS next_label
    _set lbl n
    movesub n next_label
    dec next_label

    bf_at next_label  >>[-]>[-][<<<

    .cs:inc JUMPS

:@goto_if v _set lbl
    is_var v

    if v
        set .cs:LABELS next_label
        _set lbl n
        movesub n next_label
        dec next_label

        clear current_label m
    endif v

    bf_at next_label  >>>[<<<

    .cs:inc JUMPS

:@goto_ifn v _set lbl
    is_var v

    not v
    @goto_if v _set lbl

:@jmp N
    @goto set N

:@jz v N
    @goto_ifn v set N

end
