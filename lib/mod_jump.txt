current_label next_label return_label continue n m

# labels for jump and call


:@begin _n
    is_val _n
    inc continue
    while continue
        copy next_label current_label 
        inc next_label

        copy current_label n
        sub _n n
        ifelse n +m
        else n -m

:@at _n
    is_val _n
        endifelse n m

        copy current_label n
        sub _n n
        ifelse n +m
        else n -m

:@end _n
    @at _n
            clear current_label next_label return_label continue
        endifelse n -m
    endwhile continue

:@goto _set _n
    _set _n next_label

:@goto_if _x _set _n
    if _x
        @goto _set _n
    endif _x

:@flat_call _set _n _m
    _set _n next_label
    _set _m return_label

:@flat_return
    move return_label next_label


# with_stack version
# requires
#  loadas local:vs  vars sp
#  loadas local:labels  consts
#  local:labels:def 0  current
#  loadas local:stack  mem any_number
:@check_callstack
    is consts local:labels
    is_val local:labels:current
    is stk local:stack

:@load_callstack _n
    is_val _n
    loadas local:stack stk _n
    loadas local:labels consts
    local:labels:def 0 current
:@unload_callstack
    unload local:labels
    unload local:stack

:@begin_at_current _n
    @check_callstack
    is_val _n

    local:labels:redef 0 current
    @begin local:labels:current
:@at_current _n
    @check_callstack
    is_val _n

    local:labels:redef _n current
    @at local:labels:current
:@end_at_current _n
    @check_callstack
    is_val _n

    local:labels:redef _n current
    @end local:labels:current
:@auto_label
    local:labels:inc current
    @at local:labels:current

:@call_set _n
    @check_callstack
    is_val _n

    set _n next_label
    local:labels:inc current
    local:stack:@push local:labels:current
    @at local:labels:current
:@call_move _n
    @check_callstack
    is_var _n

    move _n next_label
    local:labels:inc current
    local:stack:@push local:labels:current
    @at local:labels:current
:@call_copy _n
    @check_callstack
    is_var _n

    copy _n next_label
    local:labels:inc current
    local:stack:@push local:labels:current
    @at local:labels:current
:@return
    @check_callstack

    local:stack:@pop next_label

:@call_if_set _x _n
    @check_callstack
    is_var _x
    is_val _n

    local:labels:inc current
    if _x
        set _n next_label
        local:stack:@push local:labels:current
    endif _x
    @at local:labels:current
:@call_if_move _x _n
    @check_callstack
    is_var _x _n

    local:labels:inc current
    if _x
        move _n next_label
        local:stack:@push local:labels:current
    endif _x
    @at local:labels:current
:@call_if_copy _x _n
    @check_callstack
    is_var _x _n

    local:labels:inc current
    if _x
        copy _n next_label
        local:stack:@push local:labels:current
    endif _x
    @at local:labels:current
:@return_if _x
    @check_callstack
    is_var _x

    if _x
        local:stack:@pop next_label
    endif _x
end
